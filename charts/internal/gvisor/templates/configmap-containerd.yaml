apiVersion: v1
kind: ConfigMap
metadata:
  name: containerd-gvisor
  namespace: kube-system
data:
  install-gvisor-containerd.sh: |-
    #!/bin/sh

    BIN_TARGET_DIR="{{.Values.config.binFolder }}"

    echo "Creating container-runtime binary folder if not exist"
    mkdir -p "/var/host/$BIN_TARGET_DIR"

    echo "Copy GVisor Binaries"
    cd /var/content
    chmod +x runsc
    mv runsc "/var/host/$BIN_TARGET_DIR"
    chmod +x containerd-shim-runsc-v1.linux-amd64
    mv containerd-shim-runsc-v1.linux-amd64 "/var/host/$BIN_TARGET_DIR/containerd-shim-runsc-v1"

    echo "Configure ContainerD"
    FILENAME=/var/host/etc/containerd/config.toml
    VERSION="$(head -n 1 $FILENAME)"

    if [ "$VERSION" == "version = 2" ]
    then
      echo "[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runsc]
        runtime_type = \"io.containerd.runsc.v1\"" >> /var/host/etc/containerd/config.toml
    else
      echo "[plugins.cri.containerd.runtimes.runsc]
        runtime_type = \"io.containerd.runsc.v1\"" >> /var/host/etc/containerd/config.toml
    fi

    chroot /var/host bash -c "systemctl restart containerd"

    echo "Task completed, sleeping"
    while true; do
    	sleep 3600;
    done
  uninstall-gvisor-containerd.sh: |-
    #!/bin/sh

    BIN_TARGET_DIR={{.Values.config.binFolder }}

    echo "Delete GVisor Binaries"
    rm -rf /var/host/$BIN_TARGET_DIR/runsc
    rm -rf /var/host/$BIN_TARGET_DIR/containerd-shim-runsc-v1

    echo "Reconfigure ContainerD"
    FILENAME=/var/host/etc/containerd/config.toml

    sed -i -e '/runsc/d' $FILENAME
